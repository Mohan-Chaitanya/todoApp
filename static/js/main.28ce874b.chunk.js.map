{"version":3,"sources":["Header.js","form.js","Todo.js","Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Form","todos","setTodos","setInputText","inputText","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","onSubmit","event","preventDefault","text","completed","id","Math","random","required","placeholder","value","onChange","target","type","Todo","todo","onClick","filter","e","TodoList","map","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAUeA,EARA,WACX,OACI,qBAAKC,UAAU,SAAf,SACI,gD,OC4BGC,EA/BF,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAuB3C,OAVAC,qBAAU,WACN,IAAMC,EAAOC,aAAaC,QAAQ,SAC9BF,GACAJ,EAASO,KAAKC,MAAMJ,MAEzB,IACHD,qBAAU,WACNE,aAAaI,QAAQ,QAASF,KAAKG,UAAUX,MAC9C,CAACA,IAGA,uBAAMY,SApBV,SAA2BC,GACvBA,EAAMC,iBACNb,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAChBe,KAAMZ,EACNa,WAAW,EACXC,GAAoB,IAAhBC,KAAKC,aAEbjB,EAAa,KAab,UACI,uBAAOkB,UAAQ,EAACC,YAAY,aAAavB,UAAU,YAAYwB,MAAOnB,EAAWoB,SAxBzF,SAA0BV,GACtBX,EAAaW,EAAMW,OAAOF,UAwBtB,wBAAQG,KAAK,SAAb,qBCbGC,EAbF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMZ,EAA4B,EAA5BA,KAAMf,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAM/B,OACI,gCACI,6BAAKc,IAAU,wBAAQa,QANT,WAClB3B,EAASD,EAAM6B,QAAO,SAAAC,GAAC,OAAIA,EAAEb,KAAOU,EAAKV,QAKtB,wBCOZc,EAdE,SAAC,GAAyB,IAAvB/B,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvB,OACI,8BACI,6BAAKD,EAAMgC,KAAI,SAAAL,GAAI,OACf,cAAC,EAAD,CAAM1B,SAAUA,EACZD,MAAOA,EACP2B,KAAMA,EACNZ,KAAMY,EAAKZ,MACNY,EAAKV,YCefgB,EAlBH,WAAO,IAAD,EAEkBC,mBAAS,IAF3B,mBAET/B,EAFS,KAEED,EAFF,OAGUgC,mBAAS,IAHnB,mBAGTlC,EAHS,KAGFC,EAHE,KAMhB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAME,UAAWA,EACfH,MAAOA,EACPC,SAAUA,EACVC,aAAcA,IAChB,cAAC,EAAD,CAAUD,SAAUA,EAAUD,MAAOA,QCT5BmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.28ce874b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='header'>\r\n            <h1>Task-lister</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useEffect } from \"react\";\r\n\r\nconst Form = ({ todos, setTodos, setInputText, inputText }) => {\r\n    function inputTextHandler(event) {\r\n        setInputText(event.target.value);\r\n    }\r\n    function submitTodoHandler(event) {\r\n        event.preventDefault();\r\n        setTodos([...todos, {\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 100\r\n        }]);\r\n        setInputText('');\r\n    }\r\n    useEffect(() => {\r\n        const data = localStorage.getItem('todos');\r\n        if (data) {\r\n            setTodos(JSON.parse(data));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    return (\r\n        <form onSubmit={submitTodoHandler} >\r\n            <input required placeholder='Whats next' className='formInput' value={inputText} onChange={inputTextHandler} />\r\n            <button type='submit'>Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = ({ todo, text, todos, setTodos }) => {\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(e => e.id !== todo.id))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ui>{text}</ui><button onClick={deleteHandler}>‚ùå</button>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\"\r\n\r\nconst TodoList = ({ todos, setTodos }) => {\r\n    return (\r\n        <div>\r\n            <ul>{todos.map(todo => (\r\n                <Todo setTodos={setTodos}\r\n                    todos={todos}\r\n                    todo={todo}\r\n                    text={todo.text}\r\n                    key={todo.id} />\r\n            ))}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","\nimport React, { useEffect, useState } from 'react'\nimport './App.css';\nimport Header from \"./Header\"\nimport Form from \"./form\"\nimport TodoList from \"./Todolist\"\n\n\nconst App = () => {\n\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n\n\n  return (\n    <div>\n      <Header />\n      <Form inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText} />\n      <TodoList setTodos={setTodos} todos={todos} />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}